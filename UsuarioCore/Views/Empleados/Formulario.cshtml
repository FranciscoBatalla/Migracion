@model ML.Empleado
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@{
    ViewData["Title"] = "Formulario Empleado";
}


<h1>Formulario Empleado</h1>



<div class="container">

    @using (Html.BeginForm("Formulario", "Empleados", FormMethod.Post, new
    {
        enctype = "multipart/form-data"
    }))
    {

        @Html.AntiForgeryToken()

        <div class="container my-4">
            <div class="row g-3">
                @Html.HiddenFor(model => model.IdEmpleado)

                <div class="col-md-4 mb-3">
                    @Html.LabelFor(model => model.Nombre, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", required = "required", onkeypress = "validarLetras(this, event)", onblur = "validarLetras(this, event)" })
                    @Html.ValidationMessageFor(model => model.Nombre)
                    <div class="valid-feedback">
                        correcto!
                    </div>
                    <div class="invalid-feedback">
                        Solo se aceptan letras.
                    </div>
                </div>

                <div class="col-md-4 mb-3">
                    @Html.LabelFor(model => model.ApellidoPaterno, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", required = "required", onkeypress = "validarLetras(this, event)", onblur = "validarLetras(this, event)" })
                    @Html.ValidationMessageFor(model => model.ApellidoPaterno)
                    <div class="valid-feedback">
                        correcto!
                    </div>
                    <div class="invalid-feedback">
                        Solo se aceptan letras.
                    </div>
                </div>

                <div class="col-md-4 mb-3">
                    @Html.LabelFor(model => model.ApellidoMaterno, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", required = "required", onkeypress = "validarLetras(this, event)", onblur = "validarLetras(this, event)" })
                    @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                    <div class="valid-feedback">
                        correcto!
                    </div>
                    <div class="invalid-feedback">
                        Solo se aceptan letras.
                    </div>

                </div>

                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.FechaNacimiento, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.FechaNacimiento, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", onblur = "validarFecha(this, event)" })
                    <div class="valid-feedback">
                        Correcto!
                    </div>
                    <div class="invalid-feedback">
                        Fecha Invalida, intenta de nuevo!
                    </div>
                </div>

                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.RFC, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.RFC, new
                        {
                            @class = "form-control",
                            onkeypress = "validarRFC(this, event)",
                            onblur = "validarLetrasyNumeros(this, event)"
                        })
                    @Html.ValidationMessageFor(model => model.RFC)
                    <div class="valid-feedback">
                        Es un RFC valido!
                    </div>
                    <div class="invalid-feedback">
                        Tu RFC no es un RFC valido:(.
                    </div>

                </div>

                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.NSS, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.NSS, new
                        {
                            @class = "form-control",
                            onkeypress = "validarLetrasyNumeros(this, event)",
                            onblur = "validarLetrasyNumeros(this, event)"
                        })
                    @* @Html.ValidationMessageFor(model => model.NSS) *@
                    <div class="valid-feedback">
                        Es un NSS valido!
                    </div>
                    <div class="invalid-feedback">
                        Tu NSS no es un NSS valido:(.
                    </div>

                </div>

                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.CURP, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.CURP, new { @class = "form-control", onblur = "ValidarCURP(this, event)" })
                    @Html.ValidationMessageFor(model => model.CURP)
                    <div class="valid-feedback">
                        Es un CURP valido!
                    </div>
                    <div class="invalid-feedback">
                        Tu CURP no es un CURP valido:(.
                    </div>

                </div>

                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.FechaIngreso, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.FechaIngreso, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", onblur = "validarFecha(this, event)" })
                    <div class="valid-feedback">
                        Correcto!
                    </div>
                    <div class="invalid-feedback">
                        Fecha Invalida, intenta de nuevo!
                    </div>
                </div>


                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.SalarioBase, new { @class = "form-label" })

                    @Html.TextBoxFor(model => model.SalarioBase, new { @class = "form-control", type = "number", step = "0.01", min = "0", onekepress = "validarSoloNumeros(this, event)", onblur = "validarSoloNumeros(this, event)" })

                    @if (Model.SalarioBase != null)
                    {
                        <small class="text-muted">Salario formateado: @Model.SalarioBase.Value.ToString("C")</small>
                    }
                    <div class="valid-feedback">
                        correcto!
                    </div>
                    <div class="invalid-feedback">
                        Solo se aceptan Numeros.
                    </div>
                </div>

                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.NoFaltas, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.NoFaltas, new { @class = "form-control", type = "number", min = "0", onekeypress = "validarSoloNumeros(this, event)", onblur = "validarSoloNumeros(this, event)" })
                    <div class="valid-feedback">
                        correcto!
                    </div>
                    <div class="invalid-feedback">
                        Solo se aceptan Numeros.
                    </div>
                </div>


                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.Departamento!.IdDepartamento, new { @class = "form-label" })
                    @Html.DropDownListFor(model => model.Departamento!.IdDepartamento,
                             new SelectList(Model.Departamento!.Departamentos, "IdDepartamento", "Descripcion"),
                             "-- Selecciona un departamento --",
                             new { @class = "form-control", required = "required" })
                    <div class="valid-feedback">
                        Correcto!
                    </div>
                    <div class="invalid-feedback">
                        Por favor Selecciona un Departamento!
                    </div>
                </div>

                <div class="col-6 mt-3">
                    <a href="@Url.Action("CardsGetAll","Empleados")" class="btn btn-secondary w-100">
                        <i class="bi bi-skip-backward-fill"></i> Regresar
                    </a>
                </div>
                <div class="col-6 mt-3">
                    <button type="submit" class="btn btn-primary w-100">
                        Guardar  <i class="bi bi-floppy-fill"></i>
                    </button>

                </div>
            </div>
        </div>



    }


</div>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
}
<script src="~/js/Empleados/Metodos.js"></script>
<

